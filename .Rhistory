)
)
# theme_dag
ggdag(simple_dag) +
theme_dag()
ggdag_status(simple_dag) +
theme_dag()
#adjust
adjustmentSets(simple_dag,  type = "minimal")
ggdag_adjustment_set(simple_dag, shadow = TRUE) +
theme_dag()
# LOAD THE DATASET
#url_path = "https://raw.githubusercontent.com/juandavidgutier/soil_moisture_malaria/master/top50.csv"
muni_Col <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
dim(muni_Col)
head(muni_Col)
#sd units
muni_Col$Rain <- zscore(muni_Col$Rain, na.rm = TRUE)
muni_Col$Runoff <- zscore(muni_Col$Runoff, na.rm = TRUE)
muni_Col$Temperature <- zscore(muni_Col$Temperature, na.rm = TRUE)
muni_Col$SST12 <- zscore(muni_Col$SST12, na.rm = TRUE)
muni_Col$SST3 <- zscore(muni_Col$SST3, na.rm = TRUE)
muni_Col$SST34 <- zscore(muni_Col$SST34, na.rm = TRUE)
muni_Col$SST4 <- zscore(muni_Col$SST4, na.rm = TRUE)
muni_Col$NATL <- zscore(muni_Col$NATL, na.rm = TRUE)
muni_Col$SATL <- zscore(muni_Col$SATL, na.rm = TRUE)
muni_Col$TROP <- zscore(muni_Col$TROP, na.rm = TRUE)
# REGIONS
regions <- as.character(unique(muni_Col$municipality))
# CREATE A LIST WITH THE REGIONAL SERIES
data <- lapply(regions,function(x) muni_Col[muni_Col$municipality==x,])
names(data) <- regions
m <- length(regions)
# SoilMoi RANGES
ranges <- t(sapply(data, function(x) range(x$SoilMoi,na.rm=T)))
# FUNCTION TO COMPUTE THE Q-AIC IN QUASI-POISSON MODELS
fqaic <- function(model) {
loglik <- sum(dpois(model$y,model$fitted.values,log=TRUE))
phi <- summary(model)$dispersion
qaic <- -2*loglik + 2*summary(model)$df[3]*phi
return(qaic)
}
planti <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
str(planti)
new_data1 <- planti %>%
group_by(Code.DANE) %>%
mutate(lag1_cases = dplyr::lead(Cases, n=1, order_by=Code.DANE)) #lag
View(new_data1)
planti <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
str(planti)
new_data1 <- planti %>%
group_by(Code.DANE) %>%
mutate(lead1_cases = dplyr::lead(Cases, n=1, order_by=Code.DANE)) #lag
new_data2 <- new_data1 %>%
group_by(Code.DANE) %>%
mutate(lag1_cases = dplyr::lag(Cases, n=1, order_by=Code.DANE)) #lag
View(new_data2)
View(new_data2)
write.csv(new_data2, "D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
# LOAD THE DATASET
#url_path = "https://raw.githubusercontent.com/juandavidgutier/soil_moisture_malaria/master/top50.csv"
muni_Col <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
dim(muni_Col)
head(muni_Col)
#sd units
muni_Col$Rain <- zscore(muni_Col$Rain, na.rm = TRUE)
muni_Col$Runoff <- zscore(muni_Col$Runoff, na.rm = TRUE)
muni_Col$Temperature <- zscore(muni_Col$Temperature, na.rm = TRUE)
muni_Col$SST12 <- zscore(muni_Col$SST12, na.rm = TRUE)
muni_Col$SST3 <- zscore(muni_Col$SST3, na.rm = TRUE)
muni_Col$SST34 <- zscore(muni_Col$SST34, na.rm = TRUE)
muni_Col$SST4 <- zscore(muni_Col$SST4, na.rm = TRUE)
muni_Col$NATL <- zscore(muni_Col$NATL, na.rm = TRUE)
muni_Col$SATL <- zscore(muni_Col$SATL, na.rm = TRUE)
muni_Col$TROP <- zscore(muni_Col$TROP, na.rm = TRUE)
# REGIONS
regions <- as.character(unique(muni_Col$municipality))
# CREATE A LIST WITH THE REGIONAL SERIES
data <- lapply(regions,function(x) muni_Col[muni_Col$municipality==x,])
names(data) <- regions
m <- length(regions)
# SoilMoi RANGES
ranges <- t(sapply(data, function(x) range(x$SoilMoi,na.rm=T)))
# FUNCTION TO COMPUTE THE Q-AIC IN QUASI-POISSON MODELS
fqaic <- function(model) {
loglik <- sum(dpois(model$y,model$fitted.values,log=TRUE))
phi <- summary(model)$dispersion
qaic <- -2*loglik + 2*summary(model)$df[3]*phi
return(qaic)
}
################################################################################
#Lag 0-1 months
lag <- c(0,1)
#FIRST STAGE
bound <- colMeans(ranges)
argvar <- list(fun="poly", degree=2, cen=0.0)
arglag <- list(fun="ns", df=1, intercept=FALSE)
# ALTERNATIVE MODELS
# - IDENTICAL BASIS FOR PREDICTOR SPACE BUT DIFFERENT LAG SPACE
argvar2 <- list(fun="ns", df=2, cen=0.0)
arglag2 <- list(fun="poly", degree=1,intercept=FALSE)
argvar3 <- list(fun="bs", df=2, cen=0.0)
arglag3 <- list(fun="poly", degree=1, intercept=FALSE)
################################################################################
#Lag 0-1 months
lag <- c(0,1)
#FIRST STAGE
bound <- colMeans(ranges)
argvar <- list(fun="poly", degree=2, cen=18)
arglag <- list(fun="ns", df=1, intercept=FALSE)
# ALTERNATIVE MODELS
# - IDENTICAL BASIS FOR PREDICTOR SPACE BUT DIFFERENT LAG SPACE
argvar2 <- list(fun="ns", df=2, cen=18)
arglag2 <- list(fun="poly", degree=1,intercept=FALSE)
argvar3 <- list(fun="bs", df=2, cen=18)
arglag3 <- list(fun="poly", degree=1, intercept=FALSE)
yall <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall2 <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall3 <- matrix(NA,length(data),3,dimnames=list(regions,paste("b",seq(3),sep="")))
# (CO)VARIANCE MATRICES
Sall <- vector("list",length(data))
names(Sall) <- regions
Sall2 <- Sall3 <- Sall
# Q-AIC
qaic <- qaic2 <- qaic3 <- 0
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
library(dlnm) ; library(mvmeta) ; library(splines) ; library(dplyr); library(ggplot2); library(RCurl); library(MKdescr)
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
# LOAD THE DATASET
#url_path = "https://raw.githubusercontent.com/juandavidgutier/soil_moisture_malaria/master/top50.csv"
muni_Col <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
dim(muni_Col)
head(muni_Col)
#sd units
muni_Col$Rain <- zscore(muni_Col$Rain, na.rm = TRUE)
muni_Col$Runoff <- zscore(muni_Col$Runoff, na.rm = TRUE)
muni_Col$Temperature <- zscore(muni_Col$Temperature, na.rm = TRUE)
muni_Col$SST12 <- zscore(muni_Col$SST12, na.rm = TRUE)
muni_Col$SST3 <- zscore(muni_Col$SST3, na.rm = TRUE)
muni_Col$SST34 <- zscore(muni_Col$SST34, na.rm = TRUE)
muni_Col$SST4 <- zscore(muni_Col$SST4, na.rm = TRUE)
muni_Col$NATL <- zscore(muni_Col$NATL, na.rm = TRUE)
muni_Col$SATL <- zscore(muni_Col$SATL, na.rm = TRUE)
muni_Col$TROP <- zscore(muni_Col$TROP, na.rm = TRUE)
# REGIONS
regions <- as.character(unique(muni_Col$municipality))
# CREATE A LIST WITH THE REGIONAL SERIES
data <- lapply(regions,function(x) muni_Col[muni_Col$municipality==x,])
names(data) <- regions
m <- length(regions)
# SoilMoi RANGES
ranges <- t(sapply(data, function(x) range(x$SoilMoi,na.rm=T)))
# FUNCTION TO COMPUTE THE Q-AIC IN QUASI-POISSON MODELS
fqaic <- function(model) {
loglik <- sum(dpois(model$y,model$fitted.values,log=TRUE))
phi <- summary(model)$dispersion
qaic <- -2*loglik + 2*summary(model)$df[3]*phi
return(qaic)
}
################################################################################
#Lag 0-1 months
lag <- c(0,1)
#FIRST STAGE
bound <- colMeans(ranges)
argvar <- list(fun="poly", degree=2, cen=18)
arglag <- list(fun="ns", df=1, intercept=FALSE)
# ALTERNATIVE MODELS
# - IDENTICAL BASIS FOR PREDICTOR SPACE BUT DIFFERENT LAG SPACE
argvar2 <- list(fun="ns", df=2, cen=18)
arglag2 <- list(fun="poly", degree=1,intercept=FALSE)
argvar3 <- list(fun="bs", df=2, cen=18)
arglag3 <- list(fun="poly", degree=1, intercept=FALSE)
yall <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall2 <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall3 <- matrix(NA,length(data),3,dimnames=list(regions,paste("b",seq(3),sep="")))
# (CO)VARIANCE MATRICES
Sall <- vector("list",length(data))
names(Sall) <- regions
Sall2 <- Sall3 <- Sall
# Q-AIC
qaic <- qaic2 <- qaic3 <- 0
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
View(data)
View(data)
data[["QUIBDO"]]
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + lag1_cases + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, lag1_cases + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP, lag1_cases + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP+  log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
# GRAND Q-AIC
sum(qaic) ; sum(qaic2) ; sum(qaic3)
# LOAD THE DATASET
#url_path = "https://raw.githubusercontent.com/juandavidgutier/soil_moisture_malaria/master/top50.csv"
df <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
muni_Col <- df %>% drop_na()
library(dlnm) ; library(mvmeta) ; library(splines) ; library(dplyr); library(ggplot2); library(RCurl); library(MKdescr)
# LOAD THE DATASET
#url_path = "https://raw.githubusercontent.com/juandavidgutier/soil_moisture_malaria/master/top50.csv"
df <- read.csv("D:/clases/UDES/articulo malaria total/dnlm_humedad_suelo/reviewers/code/top50.csv")
muni_Col <- df %>% drop_na()
#sd units
muni_Col$Rain <- zscore(muni_Col$Rain, na.rm = TRUE)
muni_Col$Runoff <- zscore(muni_Col$Runoff, na.rm = TRUE)
muni_Col$Temperature <- zscore(muni_Col$Temperature, na.rm = TRUE)
muni_Col$SST12 <- zscore(muni_Col$SST12, na.rm = TRUE)
muni_Col$SST3 <- zscore(muni_Col$SST3, na.rm = TRUE)
muni_Col$SST34 <- zscore(muni_Col$SST34, na.rm = TRUE)
muni_Col$SST4 <- zscore(muni_Col$SST4, na.rm = TRUE)
muni_Col$NATL <- zscore(muni_Col$NATL, na.rm = TRUE)
muni_Col$SATL <- zscore(muni_Col$SATL, na.rm = TRUE)
muni_Col$TROP <- zscore(muni_Col$TROP, na.rm = TRUE)
# REGIONS
regions <- as.character(unique(muni_Col$municipality))
# CREATE A LIST WITH THE REGIONAL SERIES
data <- lapply(regions,function(x) muni_Col[muni_Col$municipality==x,])
names(data) <- regions
m <- length(regions)
# SoilMoi RANGES
ranges <- t(sapply(data, function(x) range(x$SoilMoi,na.rm=T)))
# FUNCTION TO COMPUTE THE Q-AIC IN QUASI-POISSON MODELS
fqaic <- function(model) {
loglik <- sum(dpois(model$y,model$fitted.values,log=TRUE))
phi <- summary(model)$dispersion
qaic <- -2*loglik + 2*summary(model)$df[3]*phi
return(qaic)
}
################################################################################
#Lag 0-1 months
lag <- c(0,1)
#FIRST STAGE
bound <- colMeans(ranges)
argvar <- list(fun="poly", degree=2, cen=18)
arglag <- list(fun="ns", df=1, intercept=FALSE)
# ALTERNATIVE MODELS
# - IDENTICAL BASIS FOR PREDICTOR SPACE BUT DIFFERENT LAG SPACE
argvar2 <- list(fun="ns", df=2, cen=18)
arglag2 <- list(fun="poly", degree=1,intercept=FALSE)
argvar3 <- list(fun="bs", df=2, cen=18)
arglag3 <- list(fun="poly", degree=1, intercept=FALSE)
yall <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall2 <- matrix(NA,length(data),2,dimnames=list(regions,paste("b",seq(2),sep="")))
yall3 <- matrix(NA,length(data),3,dimnames=list(regions,paste("b",seq(3),sep="")))
# (CO)VARIANCE MATRICES
Sall <- vector("list",length(data))
names(Sall) <- regions
Sall2 <- Sall3 <- Sall
# Q-AIC
qaic <- qaic2 <- qaic3 <- 0
# LOOP FOR CITIES
# WARNING FOR PREDICTION BEYOND boundARIES SUPPRESSED
system.time({
for(i in seq(data)) {
# LOAD
sub <- data[[i]]
# DEFINE THE CROSS-BASES
suppressWarnings({
cb <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar,arglag=arglag)
cb2 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar2,arglag=arglag2)
cb3 <- crossbasis(sub$SoilMoi,lag=lag,argvar=argvar3,arglag=arglag3)
})
# RUN THE FIRST-STAGE MODELS
mfirst <- glm(Cases ~ cb + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst2 <- glm(Cases ~ cb2 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP+  log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
mfirst3 <- glm(Cases ~ cb3 + Rain + Temperature + SST12 + SST3 + SST34 + SST4 + NATL + SATL + TROP + log(lag1_cases) + lead1_cases, maxit = 1000,
family=quasipoisson(), data[[i]], offset = log(data[[i]]$total_population))
# REDUCTION TO SUMMARY ASSOCIATIONS
# TO OVERALL CUMULATIVE SUMMARY
suppressWarnings({
crall <- crossreduce(cb,mfirst)
crall2 <- crossreduce(cb2,mfirst2)
crall3 <- crossreduce(cb3,mfirst3)
})
# STORE THE RESULTS
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
yall[i,] <- coef(crall)
Sall[[i]] <- vcov(crall)
# OVERALL CUMULATIVE SUMMARY FOR THE ALTERNATIVE MODELS
yall2[i,] <- coef(crall2)
yall3[i,] <- coef(crall3)
Sall2[[i]] <- vcov(crall2)
Sall3[[i]] <- vcov(crall3)
# Q-AIC
qaic[i] <- fqaic(mfirst)
qaic2[i] <- fqaic(mfirst2)
qaic3[i] <- fqaic(mfirst3)
}
})
# GRAND Q-AIC
sum(qaic) ; sum(qaic2) ; sum(qaic3)
# SELECT THE ESTIMATION METHOD
method <- "reml" # PLEASE, CHANGE IT TO "ml" and "mm" TO DEVELOP SENSITIVITY TEST
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
mvall <- mvmeta(yall2~1,Sall2,method=method)
summary(mvall)
# SELECT THE ESTIMATION METHOD
method <- "reml" # PLEASE, CHANGE IT TO "ml" and "mm" TO DEVELOP SENSITIVITY TEST
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
mvall <- mvmeta(yall2~1,Sall2,method=method)
View(Sall2)
# GRAND Q-AIC
sum(qaic) ; sum(qaic2) ; sum(qaic3)
# SELECT THE ESTIMATION METHOD
method <- "reml" # PLEASE, CHANGE IT TO "ml" and "mm" TO DEVELOP SENSITIVITY TEST
# OVERALL CUMULATIVE SUMMARY FOR THE MAIN MODEL
mvall <- mvmeta(yall2~1,Sall2,method=method)
View(crall2)
View(yall2)
View(sall2)
View(Sall2)
View(Sall2)
